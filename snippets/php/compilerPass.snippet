<?php

`PhpNamespaceStatement()`

use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface;
use Symfony\Component\DependencyInjection\Reference;

/**
 *
 * @author `g:snips_author`
 */
class `Filename('', 'FooBar')` implements CompilerPassInterface
{
	public function process(ContainerBuilder $container)
	{
		if (!$container->hasDefinition('${1:chain}')) {
			return;
		}

		$definition = $container->getDefinition(
			'$1'
		);

		$taggedServices = $container->findTaggedServiceIds(
			'${2:tag}'
		);

		foreach ($taggedServices as $id => $attributes) {
			$definition->addMethodCall(
				'add',
				array(new Reference($id))
			);
		}
	}
}
